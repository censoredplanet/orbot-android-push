<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:installLocation="internalOnly">

    <!--
        Some Chromebooks don't support touch. Although not essential,
        it's a good idea to explicitly include this declaration.
    -->
    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="18" />
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />

    <!-- for Android 13 -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>


    <queries>
        <intent>
            <action android:name="android.intent.action.MAIN" />
        </intent>
    </queries>
    
    <application
        android:name=".OrbotApp"
        android:allowBackup="false"
        android:allowClearUserData="true"
        android:configChanges="locale|orientation|screenSize"
        android:description="@string/app_description"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/DefaultTheme"
        tools:replace="android:allowBackup"
        android:hasFragileUserData="false"
        android:taskAffinity=""
        android:networkSecurityConfig="@xml/network_security_config"
        >
        <!-- The networkSecurityConfig is for allowing HTTP communication in Android Virtual Device to host -->

        <activity android:name=".OrbotActivity"
            android:excludeFromRecents="false"

            android:launchMode="singleInstance"
            android:theme="@style/OrbotActivityTheme"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity
            android:name=".core.ui.SettingsPreferencesFragment"
            android:theme="@style/OrbotActivityTheme" />

        <activity
            android:theme="@style/OrbotActivityTheme"
            android:name=".ui.AppManagerActivity"
            android:label="@string/title_choose_apps"/>

        <activity
            android:name=".ui.v3onionservice.OnionServiceActivity"
            android:label="@string/hidden_services">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".OrbotActivity" />
        </activity>

        <activity android:name=".ui.v3onionservice.clientauth.ClientAuthActivity"
            android:label="@string/v3_client_auth_activity_title">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".OrbotActivity"/>
        </activity>

        <activity
            android:name=".ui.kindnessmode.KindnessModeActivity"
            android:configChanges="orientation|screenSize"
            android:theme="@style/OrbotActivityTheme"
            android:label="@string/volunteer_mode" />

        <activity
            android:name=".ui.onboarding.CustomBridgesActivity"
            android:label="@string/use_custom_bridges" />

        <provider
            android:name=".ui.v3onionservice.OnionServiceContentProvider"
            android:authorities="${applicationId}.ui.v3onionservice"
            android:exported="false" />

        <provider
            android:authorities="${applicationId}.ui.v3onionservice.clientauth"
            android:name=".ui.v3onionservice.clientauth.ClientAuthContentProvider"
            android:exported="false"/>

        <receiver
            android:name=".service.StartTorReceiver"
            android:exported="true"
            tools:ignore="ExportedReceiver">
            <intent-filter>
                <action android:name="org.torproject.android.intent.action.START" />
            </intent-filter>
        </receiver>

        <receiver
            android:name=".core.OnBootReceiver"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.RECEIVE_BOOT_COMPLETED"
            android:directBootAware="false">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <action android:name="android.intent.action.QUICKBOOT_POWERON" />
            </intent-filter>
        </receiver>

        <service
            android:name=".service.OrbotService"
            android:enabled="true"
            android:permission="android.permission.BIND_VPN_SERVICE"
            android:foregroundServiceType="dataSync"
            android:stopWithTask="false"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.VpnService" />
            </intent-filter>
        </service>

        <service
            android:name=".ui.OrbotTileService"
            android:label="@string/app_name"
            android:icon="@drawable/ic_launcher_foreground_title"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            android:exported="true">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>

        <service
            android:name="MyFirebaseMessagingService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
            </intent-filter>
        </service>

        <!-- Set custom default icon. This is used when no icon is set for incoming notification messages.
     See README(https://goo.gl/l4GJaQ) for more. -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@mipmap/ic_launcher" />
        <!-- Set color used with incoming notification messages. This is used when no color is set for the incoming
             notification message. See README(https://goo.gl/6BKBk7) for more. -->
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_color"
            android:resource="@color/design_default_color_secondary" />

<!--        Notification Channels.-->
<!--        See https://developer.android.com/develop/ui/views/notifications#ManageChannels-->
<!--        <meta-data-->
<!--            android:name="com.google.firebase.messaging.default_notification_channel_id"-->
<!--            android:value="@string/default_notification_channel_id" />-->

<!--        TODO: prevent auto initialization of FCM? Only initialize if necessary. -->

    </application>

</manifest>
